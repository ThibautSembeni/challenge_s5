---
- hosts: all
  tasks:
    - name: Clone a github repository
      git:
        repo: https://github.com/ThibautSembeni/challenge_s5.git
        dest: ~/app
        clone: yes
        update: yes
        force: yes
    - name: install pip docker
      import_tasks: docker/docker-pip.yml
      become: yes
    - name: Basic usage
      ansible.builtin.debug:
        msg: "'{{ lookup('ansible.builtin.env', 'APP_ENV') }}' is the APP_ENV environment variable."
    - name: Get cors configuration
      ansible.builtin.debug:
        msg: "'{{ lookup('ansible.builtin.env', 'CORS_ALLOW_ORIGIN') }}' is the CORS_ALLOW_ORIGIN environment variable."
    - name: Template a file
      ansible.builtin.template:
        src: ./env.j2
        dest: ~/app/.env
        mode: "0600"

- hosts: all
  name: Run using a project directory
  tasks:
    - name: Install dependencies
      community.docker.docker_container_exec:
        container: php
        command: composer install -o
      register: result
    - name: Create and pull compose services
      community.docker.docker_compose:
        project_src: app
        files: docker-compose.prod.yml
        pull: true
        state: present
        build: true
      register: output
    - name: Run JWT key generation
      community.docker.docker_container_exec:
        container: php
        command: php bin/console lexik:jwt:generate-keypair --overwrite --no-interaction
      register: result
    - name: Create database if not exists
      community.docker.docker_container_exec:
        container: php
        command: php bin/console doctrine:database:create --if-not-exists
      register: result
    - name: Execute migrations
      community.docker.docker_container_exec:
        container: php
        command: php bin/console doctrine:migrations:migrate --no-interaction
      register: result
