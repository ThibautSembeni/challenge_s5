version: '3'

services:
  php:
    container_name: php
    extra_hosts:
      - "host.docker.internal:host-gateway"
    build:
      context: server
      dockerfile: Dockerfile.prod
      target: php_dev
    volumes:
      - ./server/.docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ~/server/.config/composer:/home/prod/.composer
      - ./server:/srv/app
      - php_socket:/var/run/php
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://app:password@database:5432/app?serverVersion=15&charset=utf8}
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - CORS_ALLOW_ORIGIN=${CORS_ALLOW_ORIGIN}
      - TWILIO_DSN=${TWILIO_DSN}
      - SENDINBLUE_API_KEY=${SENDINBLUE_API_KEY}
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PUBLIC_APP_URL=${PUBLIC_APP_URL}

  database:
    container_name: database
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-app}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_USER=${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "app"]
      interval: 5s
      timeout: 5s
      retries: 5

  ###> symfony/mailer ###
  mailer:
    container_name: mailer
    image: schickling/mailcatcher
    ports: ["1025:1025", "1080:1080"]
###< symfony/mailer ###

  caddy:
    build:
      context: server
      dockerfile: Dockerfile.prod
      target: app_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
volumes:
  database_data:
  caddy_data:
  caddy_config:
  php_socket: